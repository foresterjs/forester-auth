{"version":3,"sources":["../lib/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\n\nconst jwt = require('jsonwebtoken');\nconst assert = require('assert');\n\nmodule.exports = function (config) {\n\n  assert(config.jwt, \"jwt config not defined\");\n  assert(config.jwt.secret, \"jwt.secret not defined\");\n\n  return function (forester) {\n\n    var usersCollection = forester.registerCollection(require('./_users.json'));\n    var tokensCollection = forester.registerCollection(require('./_tokens.json'));\n\n    forester.koa.use(check(usersCollection, tokensCollection, config));\n\n    forester.registerEndpoint(\n      {\n        action: \"login\",\n        collectionName: usersCollection.name,\n        method: \"post\",\n        route: \"/login\",\n        middlewares: [login(usersCollection, tokensCollection, config)],\n        description: \"login and create a session token\"\n      }\n    );\n\n  };\n};\n\n\nexport function check(usersCollection, tokensCollection, config) {\n\n  return async function (ctx, next) {\n\n\n    var {request, response} = ctx;\n\n    var token = request.query.token || request.get('Authorization');\n    if (!token) {\n      await next();\n      return;\n    }\n\n    /********************\n     check token with jwt\n     *********************/\n    try {\n      var vars = jwt.verify(token, config.jwt.secret);\n    } catch (e) {\n      response.status = 403;\n      return;\n    }\n\n    /**************************\n     check token with storage\n     **************************/\n    var tokenObj = await tokensCollection.findAll({where: {token}});\n    if (tokenObj.length !== 1) {\n      response.status = 403;\n      return;\n    }\n    tokenObj = tokenObj[0];\n\n    /*********\n     pick user\n     *********/\n    response.body = response.body || {};\n    var user = await usersCollection.pick(tokenObj.userId);\n    delete user.password;\n\n    /***********\n     authenticate\n     ************/\n    ctx.user = user; //If authenticated put user in ctx\n\n    await next();\n\n  }\n}\n\n\nexport function login(usersCollection, tokensCollection, config) {\n  return async function ({request, response}, next) {\n\n    var {username, password} = request.body;\n    response.body = response.body || {};\n\n\n    /*********\n     pick user\n     *********/\n\n    var users = await usersCollection.findAll({where: {username: username}});\n\n    if (users.length !== 1) {\n      response.body.done = false;\n      response.body.errors = ['not_found'];\n      await next();\n      return;\n    }\n    var user = users[0];\n\n    /***************\n     check password\n     **************/\n    if (user.password !== password) {\n      response.body.done = false;\n      response.body.errors = ['bad_password'];\n      await next();\n      return;\n    }\n    delete user.password;\n\n    /*********************\n     sign and create token\n     *********************/\n    var data = {\n      token: jwt.sign({}, config.jwt.secret),\n      userId: user.id\n    };\n\n    var token = await tokensCollection.create(data);\n\n    response.body.data = token;\n    response.body.user = user;\n    response.body.done = true;\n\n    await next();\n  }\n}\n\n\n"]}